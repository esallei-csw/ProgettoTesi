unit PredictiveMaintenanceRT.CalendarModel;

interface

uses
  System.Generics.Collections;

type
  TCalendarModel = class

  private
  {Private declarations}
  FIDCelPro: integer;
  FIDCalendar: integer;
  FStartDay: Double;
    FHourDaily: TDictionary<integer, double>;


  public
  {Public declarations}
  constructor Create;
  destructor Destroy;

  property IDCelPro: integer read FIDCelPro write FIDCelPro;
  property IDCalendar: integer read FIDCalendar write FIDCalendar;
  property StartDay: Double read FStartDay write FStartDay;
  property HourDaily: TDictionary<integer, double> read FHourDaily write FHourDaily;

end;

implementation

{ TCalendarModel }

constructor TCalendarModel.Create;
var
  I: integer;
begin
  FIDCelPro := varEmpty;
  FIDCalendar := varEmpty;
  FStartDay := varEmpty;
  FHourDaily := nil;
end;

destructor TCalendarModel.Destroy;
begin
  if Assigned(FHourDaily) then
    FHourDaily.Free;
end;

end.
